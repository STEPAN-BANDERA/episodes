HTMLCollection.prototype.forEach = Array.prototype.forEach;

var offsetMM = new Date().getTimezoneOffset(),
    login = document.getElementById('login'),
    moderators = [],
    blockList = [],
    userId = document.getElementById('user_id_chat'),
    smiles = [],
    text_smiles = [],
    can_post = true;

if (login) {
    login = login.innerText;
}

if (userId) {
    userId = ~~userId.value;
}

$('#chatt').on('click', '.no-chatt-item', function () {
    chatInit();
    document.getElementById('chatt').classList.remove('no-chatt');
});

function chatInit() {

    function moderatorsProcess() {
        moderators = JSON.parse(this.response);
        if (moderators.indexOf(userId) > -1) {
            document.getElementById('ban_list').style.display = 'inline-block';
        }
    }

    var moderatorsReq = new XMLHttpRequest();
    moderatorsReq.onload = moderatorsProcess;
    moderatorsReq.onloadend = function () {
        var counter = 0,
            wsUri = 'wss://' + window.location.hostname + '/y-chat/';

        window.ws = new WebSocket(wsUri);

        ws.addEventListener('message', onMessage);

        function socketWait() {
            counter++;

            if (ws.readyState === 0 && counter < 3) {
                // connecting state. Please wait
                return setTimeout(socketWait, 1500);
            }

            if (ws.readyState !== 1) {
                return onError();
            }

            ws.addEventListener('open', onOpen);
            ws.addEventListener('error', onError);
            ws.addEventListener('close', onClose);

            if (document.getElementsByClassName('logout-chatt').length > 0) {
                document.getElementsByClassName('logout-chatt')[0].style.display = 'flex';
            }

            heartbeat();
        }

        socketWait();

        function heartbeat() {
            if (!ws) return;
            if (ws.readyState !== 1) return;
            ws.send(JSON.stringify("heartbeat"));
            setTimeout(heartbeat, 60000);
        }

        function onOpen() {

        }

        function onMessage(ev) {

            can_post = true;

            var msg = JSON.parse(ev.data),
                type = msg.type,
                usersOnline = msg.users,
                previous_messages = msg.messages,
                uid = msg.id,
                umsg = msg.message,
                uname = msg.name,
                uavatar = msg.avatar,
                utime = msg.time;

            if (type === 'online') {

                var uniqueNames = [];
                $.each(usersOnline, function (i, el) {
                    el = el.substr(0, usersOnline[i].indexOf(',"client')) + '}';
                    if ($.inArray(el, uniqueNames) === -1) {
                        uniqueNames.push(el);
                    }
                });

                $.each(uniqueNames, function (i, e) {
                    uniqueNames[i] = JSON.parse(e);
                });

                var newUniqueNames = removeDuplicates(uniqueNames, 'id');
                $('#online_list > span').text(newUniqueNames.length);
                var html = '<ul>';
                $.each(newUniqueNames, function (i, e) {
                    html += '<li><a target="_blank" data-id="' + e.id + '" href="/users/id' + e.id + '">' + e.name.toString() + '</a>';
                    html += '<i title="Обратиться в чате" class="fa fa-bullhorn chat-horn"></i>';
                    html += '</li>';
                });
                html += '</ul>';
                $('#online_ul').html(html);
                return false;
            }

            var post_time = new Date('December 29, 1989 ' + utime + ':00');
            post_time.setTime(post_time.getTime() - offsetMM * 60 * 1000);

            if (type === 'previous_messages') {
                previous_messages.reverse();
                $.each(previous_messages, function (i, e) {
                    e = JSON.parse(e);
                    var time = new Date('December 29, 1989 ' + e.time + ':00');
                    time.setTime(time.getTime() - offsetMM * 60 * 1000);
                    addMessage(e.type, e.id, e.message, e.name, e.avatar, time);
                });
                return false;
            }

            if (type === 'system_ban') {
                umsg = 'Вы забанены. До автоматического разбана осталось ' + getTimeByMinutes(getBanTime(umsg[0], umsg[1]));
            }

            addMessage(type, uid, umsg, uname, uavatar, post_time);

        }

        function removeDuplicates(myArr, prop) {
            return myArr.filter((obj, pos, arr) => {
                return arr.map(mapObj => mapObj[prop]).indexOf(obj[prop]) === pos;
            });
        }

        function onError() {
            showNotice('Произошла ошибка', 'Сообщение чата', 'error');
            closeChatWindow();
        }

        function closeChatWindow() {
            document.getElementById('chatt').classList.add('no-chatt');

            if (document.getElementsByClassName('logout-chatt').length > 0) {
                document.getElementsByClassName('logout-chatt')[0].style.display = 'none';
                document.getElementsByClassName('logout-chatt')[0].removeEventListener('click', function () {
                });
            }

            document.querySelector('#chatt ul').innerHTML = '<li class="no-chatt-item">Войти в чат</li>';
            document.getElementsByClassName('no-chatt-item')[0].style.display = 'block';
            document.getElementById('send-btn').removeEventListener('click', sendBtn);
            ws.removeEventListener('message', onMessage);
            ws.removeEventListener('error', onError);
            ws.removeEventListener('close', onError);
            ws.close();
        }

        document.getElementById('send-btn').addEventListener('click', sendBtn);

        function sendBtn() {
            var mymessage = document.getElementById('c_post').innerHTML;

            if (mymessage === '') {
                showNotice("Сообщение не может быть пустым", "Сообщение чата", "error");
                return;
            }

            var skipTime = new Date().addHours(3).getUTCHours() >= 0 && new Date().addHours(3).getUTCHours() < 6;

            mymessage = mymessage
                .replace(/<(\/)?nick.*?>/g, '[$1ник]')
                .replace(/<\/?.{1,15}>/g, '');

            mymessage = escapeEncode(mymessage);

            var div = document.createElement("div");
            div.innerHTML = mymessage;
            mymessage = div.textContent || div.innerText || "";

            var mess = mymessage
                .replace(/&/g, "&amp;")
                .replace(/</g, "&lt;")
                .replace(/>/g, "&gt;")
                .replace(/͏/g, '')
                .replace(//g, '')
                .replace(/⠀/g, '')
                .replace(/‎‎‎‎ /g, '')
                .replace(/ᅠ/g, '')
                .trim().substring(0, 500);

            if (!mess || !can_post) {
                return false;
            }

            if (
                $('.chat-item').eq(-1).data('user') == userId.toString()
                && $('.chat-item').eq(-2).data('user') == userId.toString()
                && $('.chat-item').eq(-3).data('user') == userId.toString()
            ) {
                showNotice('Anti-flood. Вы отправили более 3 сообщений подряд');
                return false;
            }

            var blackList = [];

            function absoluteObscene() {
                var messages = [
                    'Извините, я не могу доставить Ваше сообщение. В нем используется нецензурная лексика, которая на сайте запрещена.',
                    'Извините, но текст сообщения не приемлем. Я не смогу его отправить',
                    'Прошу прощения, но я не могу отправить сообщение содержащее нецензурную лексику'
                ];
                return '<i style="color: #ff6666">Это сообщение видите только Вы.</i><br>' + messages[Math.floor(Math.random() * (messages.length))];
            }

            var whiteList = [];

            $.getJSON('/js/white_list.json', function (data) {
                whiteList = data.allowed || [];
            });

            $.getJSON('/js/black_list.json', function (data) {
                var text = mess.toLowerCase().split(" ");
                blackList = data.brutals;

                if (!skipTime) {
                    for (var i in text) {
                        if (blackList.indexOf(text[i]) !== -1) {
                            cam(absoluteObscene());

                            // setTimeout(function() {
                            //     $(".chat-itemb").first().parent().remove()
                            // }, 10000);

                            return false;
                        }
                    }
                }

                /* potential obscene language */
                var maybeStopIt = false;

                if (!skipTime) {
                    var p = mess.toLowerCase().replace(/[&\/\\#,+()$~%.'":*?<>{}\s]/g, ''),
                        accum = 0;

                    blackList.forEach(function (val) {
                        var hundred = val.length,
                            found = 0,
                            tail = false;

                        while (val.length > 2) {
                            if (p.indexOf(val) > -1) {
                                found = val.length;
                                break;
                            }
                            if (tail) {
                                val = val.slice(0, -1);
                            } else {
                                val = val.slice(1);
                            }
                            tail = !tail;
                        }
                        if (found / hundred * 100 === 100) {
                            var text = mess.toLowerCase().split(" ");
                            text.forEach(function (word) {
                                if (word.indexOf(val) > -1) {
                                    for (var i in whiteList) {
                                        if (whiteList[i] == word) {
                                            return false;
                                        }
                                    }
                                    if (val.length / word.length * 100 > 40) {
                                        accum += val.length / word.length * 100;
                                        maybeStopIt = true;
                                    }
                                }
                            });
                            /* finding cheaters */
                            if (p.indexOf(val) > -1) {
                                var notAllowedWordPosition = p.indexOf(val);
                                var cheater = true;

                                for (var i in whiteList) {
                                    if (whiteList[i].indexOf(val) > -1) {
                                        /* ok maybe it was a mistake. Lets check */
                                        var wPos = p.indexOf(whiteList[i]);
                                        cheater = (wPos < 0);

                                        while (!(notAllowedWordPosition >= wPos && notAllowedWordPosition + val.length <= wPos + whiteList[i].length)) {
                                            wPos = p.indexOf(whiteList[i], wPos + 1);

                                            if (wPos < 0) {
                                                cheater = true;
                                                break;
                                            }
                                        }
                                        break;
                                    }
                                }

                                if (cheater) {
                                    accum += val.length / p.length * 100;
                                    maybeStopIt = true;
                                } else {
                                    maybeStopIt = false;
                                }
                            }
                        }
                    });

                    // if (maybeStopIt) {
                    //     cam("Ваше сообщение доставлено, однако я подозреваю, что оно содержит нецензурную лексику. Вероятность: " + Math.round(accum) + "%");
                    // }
                }

                can_post = false;

                var msg = {
                    message: mymessage
                };

                try {
                    ws.send(JSON.stringify(msg));
                } catch (e) {
                    can_post = false;
                }
            });

            document.getElementById('c_post').innerText = '';
        }

        function onClose() {
            closeChatWindow();
        }

        $('.logout-chatt').click(function () {
            $('#chatt').addClass('no-chatt');
            $('.logout-chatt').hide();
            $('#chatt ul.chatt').html('<li class="no-chatt-item">Войти в чат</li>');
            $('.no-chatt-item').show();
            $(this).unbind('click');
            onClose();
        });


    };

    moderatorsReq.open('get', '/moderators', true);
    moderatorsReq.send();

    var smilesReq = new XMLHttpRequest();
    smilesReq.onload = smilesProcess;
    smilesReq.open('get', '/js/smiles.json', true);
    smilesReq.send();

    function blockedProcess() {
        var data = JSON.parse(this.response);

        for (var i in data) {
            blockList.push(~~data[i].id);
        }
    }

    var blockedReq = new XMLHttpRequest();
    blockedReq.onload = blockedProcess;
    blockedReq.open('get', '/get-block-list', true);
    blockList = [];
    blockedReq.send();

    if (document.getElementsByClassName('no-chatt-item').length > 0) {
        document.getElementsByClassName('no-chatt-item')[0].style.display = 'none';
    }

    function addMessage(type, uid, umsg, uname, uavatar, post_time) {

        var html = '',
            style = '',
            c = '',
            b = false;

        if (uid === userId) {
            style += 'float:right';
        }

        if (type === 'system' || type === 'system_ban') {
            c = 'b';
            b = true;
        }

        if (blockList.indexOf(~~uid) == -1) {

            html += '<li><div class="chat-item' + c + ' new" style="' + style + '" data-user="' + uid + '">';

            if (moderators.indexOf(userId) > -1 && moderators.indexOf(uid) < 0) {
                html += '<span class="banned-icon far fa-times-circle" title="Забанить"></span>';
            }

            if (moderators.indexOf(uid) < 0 && uid != userId) {
                html += '<span class="fa fa-ban block-icon" title="Игнорировать"></span>';
            }

            html += '<div class="chat-cell chat-item-img"><a target="_blank"  href="/users/id' + uid + '"><img src="' + uavatar.replace(/"/g, '') + '" alt=""></a></div>';

            html += '<div class="chat-cell chat-item-text">';

            if (moderators.indexOf(uid) != -1) {
                if (b) {
                    html += '<a target="_blank" title="Обратиться" href="/users/id' + uid + '" class="chat-author label bot">' + uname + '</a>';
                } else {
                    html += '<a target="_blank" title="Обратиться" href="/users/id' + uid + '" class="chat-author label moder">' + uname + '</a>';
                }
            } else {
                html += '<a target="_blank" title="Обратиться" href="/users/id' + uid + '" class="chat-author">' + uname + '</a>';
            }

            html += '<p class="item-time">' + post_time.getHours() + ':' + (post_time.getMinutes() < 10 ? '0' + post_time.getMinutes() : post_time.getMinutes()) + '</p>';

            var message = escapeHtml(umsg);

            var ping = false;
            message = message.replace(/\[ник](.+?)\[\/ник]/gm, function (match, m1) {
                var c = 'nick-label';
                if (m1 === login) {
                    c += ' my-nick';
                    ping = true;
                }
                return '<nick class="' + c + '">' + m1 + '</nick>';
            });
            if (ping) {
                soundClick();
            }

            for (var i in smiles) {
                var word = smiles[i].key;
                var regEx = new RegExp(word, "ig");
                var replaceMask = '<i class="smile emoji icon-' + smiles[i].value + '"></i>';
                message = message.replace(regEx, replaceMask);
            }

            message = autoLink(message);

            if (b) {
                html += '<div class="post"><i style="color: #ff6666">Это сообщение видите только Вы.</i><br>' + message + '</div>';
            } else {
                var length2 = message
                    .replace(/(.)\1{4}/g, '')
                    .replace(/<([^>]+?)([^>]*?)>(.*?)<\/\1>/g, "1111111")
                    .replace(/\s/g, "")
                    .replace(/&nbsp;/g, "")
                    .replace(/&#39;/g, "")
                    .length;

                if (length2 > 300) {
                    html += '<div class="post hide-text">' + message + '</div><a href="#" class="more-text">Показать всё сообщение (' + length2 + ' символов)</a>';
                } else {
                    html += '<div class="post">' + message + '</div>';
                }
            }

            html += '</div>';
            html += '</div></li>';
        }

        var chat = $('#chatt ul.chatt');

        var must_scroll = chat[0].scrollTop + 20 >= chat[0].scrollHeight - chat[0].clientHeight;

        chat.append(html)

        if (moderators.indexOf(userId) === -1 && chat.children().length >= 80) {
            chat.find('.chat-item:eq(0)').parent().remove()
        }

        setTimeout(function () {
            var elem = document.querySelector('.chat-item.new');
            if (elem) {
                elem.classList.remove('new');
            }

            setTimeout(function () {
                if (must_scroll) {
                    autoscrollChat();
                }
            }, 500);
        }, 100);

        if (must_scroll) {
            autoscrollChat();
        }

    }

    function counter(el) {
        return el.replace(/<\/?[^>]+(>|$)/g, "")
            .replace(/\s/g, "")
            .replace(/&nbsp;/g, "")
            .replace(/&#39;/g, "")
            .length;
    }

    function autoscrollChat() {
        $("#chatt ul").scrollTop($("#chatt ul")[0].scrollHeight);
    }

    function smilesProcess() {
        var data = JSON.parse(this.response),
            html = '<div class="smiles-block-single" id="default-smiles">';

        smiles = data.smiles;

        for (var smile_i in smiles) {
            html += '<i class="smile emoji icon-' + smiles[smile_i].value + '" data-key="' + smiles[smile_i].key + '"></i>';
        }

        html += '</div>';
        text_smiles = data.text_smiles;
        html += '<div class="smiles-block-single" id="text-smiles">';

        for (var smile_t in text_smiles) {
            html += '<span class="smile" data-key="' + text_smiles[smile_t].key + '">' + text_smiles[smile_t].value + '</span>';
        }

        html += '</div>';
        document.getElementsByClassName('smiles-block')[0].innerHTML = html;

        document.querySelectorAll('.smiles-block .smile').forEach(function (el) {
            el.addEventListener('click', function (e) {
                e.preventDefault();
                var input = document.getElementById('c_post');
                input.innerHTML = input.innerHTML + ' ' + el.dataset.key + ' ';
                placeCaretAtEnd(input)
            });
        });
    }

    $('#ban_ul').on('click', '.remove-ban', function () {
        var data = 'id=' + $(this).parent().find('a').data('id');
        $.ajax({
            type: 'post',
            url: '/update-banned',
            data: data
        });
    });

    $('#block_ul').on('click', '.remove-ban', function () {
        var that = $(this);
        var id = ~~$(this).parent().find('a').data('id');
        var data = 'id=' + id;
        $.ajax({
            type: 'post',
            url: '/update-blocked',
            data: data,
            success: function (data) {
                that.parent().remove();
                var i = blockList.indexOf(id);
                blockList.splice(i);
                showNotice(data.message);
            }
        });
    });

    document.querySelectorAll('.smiles-panel li').forEach(function (el) {
        el.addEventListener('click', function () {
            var type = this.dataset.type;
            document.getElementsByClassName('smiles-block-single').forEach(function (el) {
                el.style.display = 'none';
            });
            document.querySelector('.smiles-block-single#' + type).style.display = 'block';
        });
    });

    $(".chatt").scroll(function () {
        var chatt = $(".chatt");
        var that = $(this);
        var st = that.scrollTop() + chatt.parent().height() + 50;
        if (st > that[0].scrollHeight) {
            $('.to-bottom').hide();
        } else $('.to-bottom').show();
    });

    $('.to-bottom').click(function () {
        var chatt = $(".chatt");
        chatt.scrollTop(chatt[0].scrollHeight);
        $('.to-bottom').hide();
    });

    function getTimeByMinutes(mins) {
        var time = {
            "days": parseInt(mins / 60 / 24),
            "hours": parseInt(mins / 60 % 24),
            "minutes": parseInt(mins % 60)
        };
        var str = {
            "minutes": {
                1: "минута",
                2: "минуты",
                3: "минут"
            },
            "hours": {
                1: "час",
                2: "часа",
                3: "часов"
            },
            "days": {
                1: "день",
                2: "дня",
                3: "дней"
            }
        };
        var final = "";
        for (var k in time) {
            if (time[k] !== 0) {
                if (time[k] % 10 === 1 && time[k] !== 11)
                    final += time[k] + " " + str[k][1] + " ";
                else if (time[k] % 10 > 1 && time[k] % 10 < 5 && (time[k] < 10 || time[k] > 20)) {
                    final += time[k] + " " + str[k][2] + " ";
                } else
                    final += time[k] + " " + str[k][3] + " ";
            }
        }
        return final.substr(0, final.length - 1);
    }

    function getBanTime(mins, utc) {
        var currentTime = Date.now();
        var banTime = utc * 1000 + mins * 60000;
        return (banTime - currentTime) / 60000;
    }

} //chatinit

$('.chat-block-icon').click(function () {
    if ($('#block_ul').html().length > 0) {
        $('#block_ul').html('');
    } else {
        $.ajax({
            url: '/get-block-list',
            type: 'post',
            success: function (data) {
                var html = '';
                if (data.length !== 0) {
                    html += '<ul>';
                    for (var i in data) {
                        html += '<li><a target="_blank" data-id="' + data[i].user_id + '" href="/users/id' + data[i].user_id + '">' + data[i].user_name + '</a>';
                        html += '<span class="fa fa-minus-circle remove-ban"></span>';
                        html += '</li>';
                    }
                    html += '</ul>';
                } else {
                    html += '<p style="padding: 5px">нет тут никого :)</p>';
                }

                $('#chatt').parent().find('#block_ul').html(html);
            }
        })
    }
});

$('#ban_list').click(function () {
    if (moderators.indexOf(userId) > -1) {
        if ($('#ban_ul').html().length > 0) {
            $('#ban_ul').html('');
        } else {
            $.ajax({
                url: '/get-banned',
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    var html = '';
                    if (data.length !== 0) {
                        html += '<ul class="custom-scroll">';
                        for (var i in data) {
                            html += '<li><a target="_blank" data-id="' + data[i].user_id + '" href="/users/id' + data[i].user_id + '">' + data[i].user_name + '</a>';
                            html += ' - ' + data[i].moder;
                            html += '<span class="fa fa-minus-circle remove-ban"></span>';
                            html += '</li>';
                        }
                        html += '</ul>';
                    } else {
                        html += '<p style="padding: 5px">нет тут никого :)</p>';
                    }

                    $('#chatt').parent().find('#ban_ul').html(html);
                }
            })
        }
    }
});

$('#online_list > span').click(function () {
    if (document.getElementById('online_ul').style.display === 'block') {
        document.getElementById('online_ul').style.display = 'none';
    } else {
        document.getElementById('online_ul').style.display = 'block';
    }
});

$('#online_list').on('click', '.chat-horn', function (e) {
    e.preventDefault();
    noticeUser($(this).parent().find('a').text())
});

$('#chatt').on('click', '.banned-win-close', function () {
    $(this).parents('.chatt').find('.banned-overlay').remove();
    $(this).parents('.chatt').find('.banned-win').remove();
}).on('click', '.chat-author', function (e) {
    e.preventDefault();
    noticeUser($(this).text())
}).on('click', '.banned-icon', function () {
    window.u_id = $(this).parent().data('user');
    window.u_name = $(this).parent().find('a.chat-author').text();
    window.u_img = $(this).parent().find('img').attr('src');
    window.message2 = $(this).parents('.chat-item').find('.post').text();
    var name = $(this).parent().find('.chat-author').text();
    $.ajax({
        url: '/banned-win',
        dataType: 'json',
        type: 'GET',
        success: function (data) {
            $('.chatt').append(data.replace('$name', name));
        }
    });
}).on('click', '.block-icon', function () {
    var id = ~~$(this).parent().data('user');
    $.ajax({
        url: '/block-user-in-chat',
        type: 'post',
        data: 'block_user_id=' + id,
        success: function (data) {
            if (data.status == 1) {
                blockList.push(id);
            } else {
                var i = blockList.indexOf(id);
                blockList.splice(i);
            }
            showNotice(data.message);
        }
    })
}).on('click', '#ban-ok', function () {
    $.ajax({
        url: '/set-banned',
        dataType: 'json',
        type: 'POST',
        data: 'user_id=' + window.u_id +
            '&time_for_ban=' + ($('#ban-value').val() * $('#ban-time').val()) +
            '&user_name=' + encodeURIComponent(window.u_name) +
            '&user_img=' + encodeURIComponent(window.u_img) +
            '&why=' + $('#why').val() +
            '&message=' + encodeURIComponent(window.message2) +
            '&moder=' + login,
        success: function (data) {
            $('.banned-win, .banned-overlay').remove();
            var level = 'success';
            if (data.status == 0) {
                level = 'error';
            }
            showNotice(data.message, 'Бан в чате', level)
        }
    });
}).on('click', '.more-text', function (e) {
    e.preventDefault();
    $(this).parent().find('.post').removeClass('hide-text');
    $(this).remove();
});

function noticeUser(name) {
    var input = $('#c_post');
    var pre = input.html();
    if (pre !== '') {
        pre = pre.replace(/<br>/g, '') + ' ';
    }
    var editable = '';
    if (getMobileOperatingSystem() !== 'Android') {
        editable = ' contenteditable="false"'
    }
    input.html(pre + '<nick class="nick-label"' + editable + '>' + name + '</nick>&#160;');
    placeCaretAtEnd(input[0])
}

function cam(m) {
    var t = new Date();
    var time = t.getHours() + ':' + t.getMinutes();
    var html = '<li><div class="chat-itemb new" data-user="25"><div class="chat-cell chat-item-img"><a target="_blank" href="/users/id25"><img src="https://i.imgur.com/6NNgN8p.jpg" alt=""></a></div><div class="chat-cell chat-item-text"><a target="_blank" title="Обратиться" href="/users/id25" class="chat-author label bot">chatter</a><p class="item-time">' + time + '</p><div class="post">' + m + '</div></div></div></li>';
    var chatt = $('.chatt');
    var must_scroll = chatt[0].scrollTop + 20 >= chatt[0].scrollHeight - chatt[0].clientHeight;
    chatt.append(html);
    if (must_scroll) chatt.scrollTop(chatt[0].scrollHeight);
}

var currentDate = new Date();
if (currentDate.getUTCHours() < 3 || currentDate.getUTCHours() > 20) {
    $('.chat-block, .chat-page').addClass('night');
}

$('#chatt-wrapper').on('DOMSubtreeModified', '.timeinH', function () {
    var hours = $(this).text();
    if (hours !== "") {
        if (hours === "00") {
            $('#chatt-wrapper').addClass('night', 500);
            if (typeof ws != 'undefined' && ws.readyState === 1) {
                cam('<i style="color: #ff6666">В чате наступила ночь!</i><br>Большая часть правил теперь недействительна. Развлекайтесь!');
            }
        } else if (hours === "06") {
            $('#chatt-wrapper').removeClass('night', 500);
            if (typeof ws != 'undefined' && ws.readyState === 1) {
                cam('<i style="color: #3cce7b;">В чате настало утро.</i><br>Правила теперь действительны, ведите себя тише!');
            }
        }
    }
});

$('#c_post').keydown(function (e) {
    if (e.keyCode === 13 || e.key === "Enter") {
        e.preventDefault();
        $('#send-btn').click();
    }
}).on('paste', function (e) {
    e.preventDefault();
    var text = e.originalEvent.clipboardData.getData('text/plain');
    document.execCommand('inserttext', false, text.replace(/\n/g, ' '));
});

if ($('.chat-page').length > 0) {
    chatInit();
}